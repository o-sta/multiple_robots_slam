<launch>
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find exploration)/cfg/custom_rosconsole.config"/>

    <arg name="robot_name" default="robot1"/>

    <arg name="map" default="/$(arg robot_name)/map"/>
    <!-- <arg name="map" default="/server/grid_map_merge/merge_map"/> -->
    <arg name="pose" default="/$(arg robot_name)/robot_pose"/>
    <arg name="pose_log" default="pose_log"/>
    <arg name="goal" default="goal"/>
    <arg name="goal_list" default="goal_list"/>
    <arg name="visualization" default="visualization"/>
    <arg name="goal_delete" default="goal/delete"/>
    <arg name="goal_list_delete" default="goal_list/delete"/>

    <!-- this group namespace-->
    <arg name="exploration_ns" default="exploration"/>

    <arg name="base_frame_id"   default="$(arg robot_name)/base_footprint"/>
  	<arg name="global_frame_id" default="$(arg robot_name)/map"/>

    <group ns="$(arg robot_name)/$(arg exploration_ns)">
        <node pkg="exploration" type="frontier_based_exploration_test" name="fbe_test" output="screen">
            <remap from="map" to="$(arg map)"/>
            <remap from="pose" to="$(arg pose)"/>
            <remap from="goal" to="$(arg goal)"/>
            <remap from="goal_list" to="$(arg goal_list)"/>
            <remap from="goal/delete" to="$(arg goal_delete)"/>
            <remap from="goal_list/delete" to="$(arg goal_list_delete)"/>
            <remap from="velocity" to="/$(arg robot_name)/mobile_base/commands/velocity"/>
            <rosparam file="$(find exploration)/params/path_planner_params.yaml" command="load"/>
            <rosparam file="$(find exploration)/params/frontier_search_params.yaml" command="load"/>
            <rosparam file="$(find exploration)/params/movement_params.yaml" command="load"/>
			<param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    		<param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
            <param name="map_frame_id" value="$(arg robot_name)/map"/>
            <param name="merge_map_frame_id" value="/server/merge_map"/>

            <param name="movebase_name" value="/$(arg robot_name)/move_base"/>
            <!-- <param name="frontier_detection_method" value="1"/> -->
            <!-- <param name="obstacle_filter" value="true"/> -->
            <!-- <param name="publish_pose_array" value="true"/> -->
            <!-- <param name="previous_goal_effect" value="false"/> -->
        </node>

        <node pkg="exploration" type="visualization_test" name="visualization_test">
            <rosparam file="$(find exploration)/params/visualization_params.yaml" command="load"/>
            <param name="map_frame_id" value="$(arg robot_name)/map"/>
            <remap from="goal" to="$(arg goal)"/>
            <remap from="goal_list" to="$(arg goal_list)"/>
            <remap from="goal_marker" to="$(arg visualization)"/>
            <remap from="goal_list_marker" to="$(arg visualization)"/>
            <remap from="goal/delete" to="$(arg goal_delete)"/>
            <remap from="goal_list/delete" to="$(arg goal_list_delete)"/>
        </node>

        <node pkg="exploration" type="log" name="log">
            <remap from="pose" to="$(arg pose)"/>
            <remap from="pose_log" to="$(arg pose_log)"/>
        </node>

	<include file="$(find exploration)/launch/includes/rosbag_record_debug_movebase.launch.xml">
        <arg name="dir" value="/home/ros1/rosbag_debug"/>
        <arg name="pose" value="$(arg pose)"/>
        <arg name="pose_log" value="/$(arg robot_name)/$(arg exploration_ns)/$(arg pose_log)"/>
        <arg name="scan" value="/$(arg robot_name)/scan"/>
        <arg name="goal" value="/$(arg robot_name)/$(arg exploration_ns)/$(arg goal)"/>
        <arg name="goal_list" value="/$(arg robot_name)/$(arg exploration_ns)/$(arg goal_list)"/>
        <arg name="visualization" value="/$(arg robot_name)/$(arg exploration_ns)/$(arg visualization)"/>
        <arg name="velocity" value="/$(arg robot_name)/mobile_base/commands/velocity"/>
        <arg name="etc" value="/$(arg robot_name)/map /$(arg robot_name)/rtabmap/cloud_obstacles /tf /tf_static /$(arg robot_name)/camera/rgb/image_color"/>
    </include>

    </group>
</launch>
